# Copyright 2019 RethinkDB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

.PHONY: default help java-driver java-clean clean-autogenerated java-convert-tests java-test update-driver clean prepare

PHONY: clean clean-test clean-pyc clean-build clean-mypy docs help
.DEFAULT_GOAL := help

define PRINT_HELP_PYSCRIPT
import re, sys

for line in sys.stdin:
	match = re.match(r'^([a-zA-Z_-]+):.*?## (.*)$$', line)
	if match:
		target, help = match.groups()
		print("%-20s %s" % (target, help))
endef
export PRINT_HELP_PYSCRIPT

RETHINKDB_CHECKOUT_DIR = /tmp/rethinkdb
TESTS_DIR = ${RETHINKDB_CHECKOUT_DIR}/test/rql_test/src

PROTO_FILE_NAME = ql2.proto
PROTO_FILE_URL = https://raw.githubusercontent.com/rethinkdb/rethinkdb/next/src/rdb_protocol/${PROTO_FILE_NAME}

JAVA_SRC_DIR=.

JAVA_PACKAGE_DIR=$(JAVA_SRC_DIR)/src/main/java/com/rethinkdb

JAVA_GEN_DIR=$(JAVA_PACKAGE_DIR)/gen
JAVA_PROTO_DIR=$(JAVA_GEN_DIR)/proto
JAVA_AST_DIR=$(JAVA_GEN_DIR)/ast
JAVA_MODEL_DIR=$(JAVA_GEN_DIR)/model
JAVA_EXC_DIR=$(JAVA_GEN_DIR)/exc
JAVA_TEST_DIR=src/test/java/com/rethinkdb
JAVA_TEST_GEN_DIR=$(JAVA_TEST_DIR)/gen

METAJAVA=scripts/metajava.py
JAVA_CONVERT_PROTO=scripts/convert_protofile.py
JAVA_CONVERT_TESTS=scripts/convert_tests.py

JAVA_TEMPLATE_DIR=templates
JAVA_PROTO_FILE=scripts/${PROTO_FILE_NAME}
JAVA_PROTO_JSON=proto_basic.json
JAVA_TERM_INFO=term_info.json
JAVA_JAVA_TERM_INFO=java_term_info.json
JAVA_GLOBAL_INFO=global_info.json

GRADLE=gradle --build-file=build.gradle       \
	      --settings-file=settings.gradle \
	      --quiet

help:
	@python -c "$$PRINT_HELP_PYSCRIPT" < $(MAKEFILE_LIST)

java-driver: | . ## Assemble the Java driver
	# $P GRADLE ASSEMBLING JAVA DRIVER
	$(GRADLE) assemble

java-clean: ## Clean Java related artifacts
	$(GRADLE) clean

java-convert-tests: ## Convert Java tests
	@$(JAVA_CONVERT_TESTS) \
		--debug \
	    --test-dir=$(TESTS_DIR) \
	    --test-output-dir=$(JAVA_TEST_GEN_DIR) \
	    --template-dir=$(JAVA_TEMPLATE_DIR)

java-test: | java-convert-tests ## Run tests
	$(GRADLE) test

$(JAVA_PROTO_JSON): $(JAVA_PROTO_FILE) $(JAVA_CONVERT_PROTO)
	python3 $(JAVA_CONVERT_PROTO) $(JAVA_PROTO_FILE) $(JAVA_PROTO_JSON)

$(JAVA_TERM_INFO): $(JAVA_PROTO_JSON) $(METAJAVA)
	python $(METAJAVA) update-terminfo	\
		--term-info=$(JAVA_TERM_INFO)	\
		--proto-json=$(JAVA_PROTO_JSON)

$(JAVA_JAVA_TERM_INFO): $(JAVA_TERM_INFO) $(METAJAVA) | .
	python $(METAJAVA) generate-java-terminfo	\
		--term-info=$(JAVA_TERM_INFO)		\
		--output-file=$@

# This generates source files needed for the driver. Should be fairly
# autonomous, but may need some manual intervention in some cases.
update-driver: $(JAVA_JAVA_TERM_INFO) $(JAVA_GLOBAL_INFO) $(METAJAVA) \
	| $(JAVA_MODEL_DIR) $(JAVA_AST_DIR) $(JAVA_PROTO_DIR) $(JAVA_EXC_DIR)
	$(PYTHON) $(METAJAVA) generate-java-classes	\
		--global-info=$(JAVA_GLOBAL_INFO)       \
		--proto-json=$(JAVA_PROTO_JSON)		\
		--java-term-info=$(JAVA_JAVA_TERM_INFO)	\
		--template-dir=$(JAVA_TEMPLATE_DIR)     \
		--package-dir=$(JAVA_PACKAGE_DIR)
	

clean: ## Clean autogenerated artifacts
	@rm -rf \
		$(JAVA_PROTO_DIR)/* \
		$(JAVA_AST_DIR)/* \
		$(JAVA_MODEL_DIR)/* \
		$(JAVA_EXC_DIR)/* \
		$(JAVA_TEST_GEN_DIR)/* \
		${RETHINKDB_CHECKOUT_DIR} \
		${TESTS_DIR} \
		__pycache__ \
		scripts/__pycache__

prepare: clean ## Prepare the repository for development
	@curl -qo ${JAVA_PROTO_FILE} ${PROTO_FILE_URL}
	@git clone https://github.com/rethinkdb/rethinkdb.git ${RETHINKDB_CHECKOUT_DIR}
	@if [ "$$?" = "1" ]; then\
        git clone https://github.com/rethinkdb/rethinkdb-java.git ${RETHINKDB_CHECKOUT_DIR};\
    fi
